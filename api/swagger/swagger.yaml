---
swagger: "2.0"
info:
  version: 1.0.0
  title: Backend task
  description: This microservice has been developed as test task

host: localhost:5000
basePath: "/"
schemes:
  - http
consumes:
  - application/application/x-www-form-urlencoded
produces:
  - application/json
paths:
  "/user/authenticate":
    post:
      description: This route accepts a random user email and password and returns a signed JWT token to access protected routes
      produces:
        - application/json
      parameters:
        - in: query
          name: "email"
          required: true
          type: "string"
        - in: query
          name: "password"
          type: "string"
          required: true
      responses:
        "200":
          description: A signed JWT token is returned with validity of 1 hour
          schema:
            type: object
          examples:
            application/json: |-
              {
                "status":"success",
                "token":"a signed JWT token",
                "expiresIn":"60 minutes",
                "message":"Token generated"
              }
        "400":
          description: Either email or password or both are not provided
          schema:
            type: object
          examples:
            application/json: |-
              {
                "status":"fail",
                "message":"Email/password is missing"
              }

  "/json/patch":
    post:
      description: This route accepts a token, a json object to be patched and a patch object.
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - in: query
          name: "token"
          required: true
          type: "string"
        - in: query
          name: "jsonData"
          required: true
          type: string
        - in: query
          name: "patchObject"
          required: true
          type: string
      responses:
        "200":
          description: A patched object is returned with the operations specified in patch object
          schema:
            type: object
          examples:
            application/json: |-
              {
                "status":"success",
                "message":"Patching done",
                "patched":{
                  "baz":"boo",
                  "hello":
                  ["world"]
                }
              }
        "400":
          description: Json data cannot be parsed/the patch object is not valid
          schema:
            type: object
          examples:
            application/json: |-
              {
                "status":"fail",
                "message":"Unable to parse jsonData/ patchObject"
              }
        "401":
          description: Token not valid/provided
          schema:
            type: object
          examples:
            application/json: |-
              {
                "status":"fail",
                "message":"Invalid token"
              }

  "/image/thumbnail":
    post:
      description: This route accepts a token, an image url and returns 50x50 thumbnail of that image.
      produces:
        - application/json
      parameters:
        - in: query
          name: "token"
          required: true
          type: "string"
        - in: query
          name: "url"
          required: true
          type: "string"
      responses:
        "200":
          description: An 50x50 thumbnail of the provided public image
          schema:
            type: file
        "400":
          description: Invalid image URL
          schema:
            type: object
          examples:
            application/json: |-
              {
                status: "fail",
                message: "Failed to generate thumbnail"
              }
        "401":
          description: Token not valid/provided
          schema:
            type: object
          examples:
            application/json: |-
              {
                "status":"fail",
                "message":"Invalid token"
              }
